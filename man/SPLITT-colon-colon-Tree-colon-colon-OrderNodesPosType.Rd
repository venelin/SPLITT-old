% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{SPLITT::Tree::OrderNodesPosType}
\alias{SPLITT::Tree::OrderNodesPosType}
\title{Reorder a vector of nodes (generic w.r.t. the position type).}
\arguments{
\item{nodes}{\href{http://en.cppreference.com/w/cpp/container/vector}{\code{std::vector}}\code{<PosType> OrderNodesPosType(}\href{http://en.cppreference.com/w/cpp/container/vector}{\code{std::vector}}\code{<\link[=SPLITT::Tree::NodeType]{NodeType}> const&}; 
a vector of application-specific nodes.}

\item{NA}{\code{PosType const&}: \code{NA} value used mainly for the purpose of template-specification.}
}
\value{
\href{http://en.cppreference.com/w/cpp/container/vector}{\code{std::vector}}\code{<PosType>}: 
a vector of positions in nodes in the order of their internally stored ids.
the element-type of the returned vector can be specified as a template argument 
or dedcued from the type of \code{NA}.
}
\description{
\code{
template<class PosType>} 
\href{http://en.cppreference.com/w/cpp/container/vector}{\code{std::vector}}\code{<PosType> OrderNodesPosType(}\href{http://en.cppreference.com/w/cpp/container/vector}{\code{std::vector}}\code{<\link[=SPLITT::Tree::NodeType]{NodeType}> const& nodes, PosType const& NA) const;}
}
\section{Template Arguments}{

\describe{
\item{PosType}{an integer type for the positions in the returned vector.}}
}

\seealso{
\code{\link[=SPLITT::Tree]{Tree}}

\link{SPLITT}

Other public methods in SPLITT::Tree: \code{\link{SPLITT::Tree::BranchLengths}},
  \code{\link{SPLITT::Tree::FindChildren}},
  \code{\link{SPLITT::Tree::FindIdOfNode}},
  \code{\link{SPLITT::Tree::FindIdOfParent}},
  \code{\link{SPLITT::Tree::FindNodeWithId}},
  \code{\link{SPLITT::Tree::HasBranchLengths}},
  \code{\link{SPLITT::Tree::LengthOfBranch}},
  \code{\link{SPLITT::Tree::OrderNodes}},
  \code{\link{SPLITT::Tree::SetBranchLengths}},
  \code{\link{SPLITT::Tree::SetLengthOfBranch}},
  \code{\link{SPLITT::Tree::Tree}},
  \code{\link{SPLITT::Tree::num_nodes}},
  \code{\link{SPLITT::Tree::num_tips}}
}
\concept{public methods in SPLITT::Tree}
