% Generated by roxygen2: do not edit by hand
% Please edit documentation in src/SPLITT.h
\name{SPLITT::At}
\alias{SPLITT::At}
\title{A sub-vector with the elements at given positions.}
\arguments{
\item{v}{a \code{const&} to a \code{VectorValues} object.}

\item{positions}{a \code{const&} to \code{VectorPositions} object. The elements in positions
must be convertible to indices in v.}

\item{mask}{a \code{\link[=SPLITT::bvec]{bvec} const&} of the same length as
\code{v} with elements equal to \code{true} at the positions to be returned.}
}
\value{
a \code{VectorValues} object.
}
\description{
This is a template function with two overwrites:

\code{
template<class VectorValues, class VectorPositions>
inline VectorValues At(VectorValues const& v, VectorPositions const& positions);}

\code{
template<class VectorValues>
inline VectorValues At(VectorValues const& v, \link[=SPLITT::bvec]{bvec} const& mask);}
  
The template argument \code{VectorValues} must 
  be an index-able class, such as std::vector; the template argument 
  VectorPositions must have a forward iterator.
}
\seealso{
\link{SPLITT}

Other global functions: \code{\link{SPLITT::IsNA}},
  \code{\link{SPLITT::Match}},
  \code{\link{SPLITT::NotIsNA}}, \code{\link{SPLITT::Seq}},
  \code{\link{SPLITT::SortIndices}}
}
