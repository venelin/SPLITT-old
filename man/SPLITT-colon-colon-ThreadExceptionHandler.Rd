% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{SPLITT::ThreadExceptionHandler}
\alias{SPLITT::ThreadExceptionHandler}
\title{An internal class for thread-safe exception hadling within parallel sections.}
\description{
This class is used as a wrapper for InitNode,VistNode and PruneNode 
function calls within parallel TraverseTree executions. It is inspired from this 
\href{https://stackoverflow.com/questions/11828539/elegant-exceptionhandling-in-openmp}{stackoverflow discussion}. 
Synopsis:
\code{class ThreadExceptionHandler;}
}
\section{Public Methods}{

\describe{
\item{\link[=SPLITT::ThreadExceptionHandler::ThreadExceptionHandler]{\code{ThreadExceptionHandler}}}{}
\item{\link[=SPLITT::ThreadExceptionHandler::Run]{\code{Run}}}{}
\item{\link[=SPLITT::ThreadExceptionHandler::CaptureException]{\code{CaptureException}}}{}
\item{\link[=SPLITT::ThreadExceptionHandler::Rethrow]{\code{Rethrow}}}{}
}
}

\seealso{
\link[=SPLITT::TraversalAlgorithm]{TraversalAlgorithm}

\link[=SPLITT::PostOrderTraversal]{PostOrderTraversal}

\link[=SPLITT::PreOrderTraversal]{PreOrderTraversal}

\link{SPLITT}
}
