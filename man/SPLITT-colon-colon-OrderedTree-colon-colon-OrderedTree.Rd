% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{SPLITT::OrderedTree::OrderedTree}
\alias{SPLITT::OrderedTree::OrderedTree}
\title{Constructor for class \code{\link[=SPLITT::OrderedTree]{OrderedTree}}.}
\arguments{
\item{branch_start_nodes}{\href{http://en.cppreference.com/w/cpp/container/vector}{\code{std::vector}}\code{<\link[=SPLITT::OrderedTree::NodeType]{NodeType}> const&}: 
starting node for every branch in the tree.}

\item{branch_end_nodes}{\href{http://en.cppreference.com/w/cpp/container/vector}{\code{std::vector}}\code{<\link[=SPLITT::OrderedTree::NodeType]{NodeType}> const&}:
ending node for every branch in the tree; must be the same length as 
\code{branch_start_nodes}.}

\item{branch_lengths}{\href{http://en.cppreference.com/w/cpp/container/vector}{\code{std::vector}}\code{<\link[=SPLITT::OrderedTree::LengthType]{LengthType}> const&}: 
lengths associated with the branches. Pass an empty vector for \code{branch_lengths} 
for a tree without branch lengths (i.e. only a topology).}
}
\description{
\code{
OrderedTree(std::vector<NodeType> const& branch_start_nodes,
std::vector<NodeType> const& branch_end_nodes,
std::vector<LengthType> const& branch_lengths);}

Constructs the tree object given a list of branches. The list of branches
  is specified from the corresponding elements in the three vectors passed as
  arguments. Creates the internal data-objects needed for ordered traversal 
  of the nodes in the tree.
}
\seealso{
\code{\link[=SPLITT::OrderedTree]{OrderedTree}} \code{\link[=SPLITT::Tree]{Tree}} \code{\link[=SPLITT::Tree::Tree]{Tree::Tree()}}

\link{SPLITT}

Other \code{\link[=SPLITT::OrderedTree]{OrderedTree}} public methods: \code{\link{SPLITT::OrderedTree::RangeIdPruneNode}},
  \code{\link{SPLITT::OrderedTree::RangeIdVisitNode}},
  \code{\link{SPLITT::OrderedTree::num_levels}},
  \code{\link{SPLITT::OrderedTree::num_parallel_ranges_prune}},
  \code{\link{SPLITT::OrderedTree::ranges_id_prune}},
  \code{\link{SPLITT::OrderedTree::ranges_id_visit}}
}
